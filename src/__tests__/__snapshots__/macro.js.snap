// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`as function 1`] = `

const myCodgen = require('../macro')
myCodgen(\`
  module.exports = "var x = {booyah() { return 'booyah!'; } };"
\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var x;

x = {
  booyah() {
    return 'booyah!';
  }

}, void 0;

`;

exports[`as jsx 1`] = `

const Codegen = require('../macro')
const ui = (
  <Codegen>{"module.exports = '<div>Hi</div>'"}</Codegen>
)

      ↓ ↓ ↓ ↓ ↓ ↓

const ui = <div>Hi</div>;

`;

exports[`as jsx with tag 1`] = `

const Codegen = require('../macro')
const ui = (
  <Codegen>{\`module.exports = '<div>Hi</div>'\`}</Codegen>
)

      ↓ ↓ ↓ ↓ ↓ ↓

const ui = <div>Hi</div>;

`;

exports[`as require call 1`] = `

import codegen from '../macro';
var x = codegen.require('./fixtures/return-one');

      ↓ ↓ ↓ ↓ ↓ ↓

var x = 1;

`;

exports[`as tag 1`] = `

import codegen from '../macro'
const greeting = 'Hello world!'
codegen\`module.exports = "module.exports = '\${greeting}';"\`

      ↓ ↓ ↓ ↓ ↓ ↓

const greeting = 'Hello world!';
module.exports = 'Hello world!';

`;

exports[`invalid usage: as fn argument 1`] = `

import codegen from '../macro';
var x = doSomething(codegen);

      ↓ ↓ ↓ ↓ ↓ ↓

Error: <PROJECT_ROOT>/src/__tests__/macro.js: ../macro: codegen macro must be used as a tagged template literal, function, jsx, or .require call

`;

exports[`invalid usage: missing code string 1`] = `

import codegen from '../macro';
var x = codegen;

      ↓ ↓ ↓ ↓ ↓ ↓

Error: <PROJECT_ROOT>/src/__tests__/macro.js: ../macro: codegen macro must be used as a tagged template literal, function, jsx, or .require call

`;

exports[`with multiple 1`] = `

import codegen from '../macro'

codegen\`module.exports = ['a', 'b', 'c'].map(l => 'export const ' + l + ' = ' + JSON.stringify(l)).join(';')\`

      ↓ ↓ ↓ ↓ ↓ ↓

export const a = "a";
export const b = "b";
export const c = "c";

`;
